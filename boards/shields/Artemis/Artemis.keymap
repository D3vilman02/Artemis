#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
&lt {
    tapping-term-ms = <200>;
};
&mt {
    retro-tap;
};

    
/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp E>, <&kp Q>, <&kp G>;
        };
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp R>, <&kp O>, <&kp M>;
        };
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp T>, <&kp H>, <&kp U>;
        };
        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp ESC>, <&kp RBKT>;
        };
        td4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp RBKT>, <&kp KP_SLASH>;
        };
        td5: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp G>, <&kp K>, <&kp EQUAL>;
        };
        td6: tap_dance_6 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp Y>, <&kp P>, <&kp EXCL>;
        };
        td7: tap_dance_7 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp L>, <&kp MINUS>, <&kp AT>;
        };
        td9: tap_dance_9 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp A>, <&kp L>, <&kp I>;
        };
        td10: tap_dance_10 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp S>, <&kp N>, <&kp K>;
        };
        td11: tap_dance_11 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp D>, <&kp F>, <&kp J>;
        };
        td12: tap_dance_12 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp F2>, <&kp APOS>;
        };
        td14: tap_dance_14 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp N>, <&kp SEMI>, <&kp LPAR>;
        };
        td15: tap_dance_15 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp I>, <&kp DQT>, <&kp NUBS>;
        };
        td16: tap_dance_16 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp O>, <&kp AMPS>, <&kp LBRC>;
        };
        td17: tap_dance_17 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp NUHS>, <&kp F4>;
        };
        td19: tap_dance_19 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp Z>, <&kp W>, <&kp P>;
        };
        td20: tap_dance_20 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp X>, <&kp B>, <&kp SEMI>;
        };
        td21: tap_dance_21 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp C>, <&kp V>, <&kp Y>;
        };
        td22: tap_dance_22 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp DEL>, <&kp FSLH>;
        };
        td23: tap_dance_23 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp FSLH>, <&kp CARET>;
        };
        td24: tap_dance_24 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp M>, <&kp STAR>, <&kp TILDE>;
        };
        td25: tap_dance_25 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp U>, <&kp PRCNT>, <&kp TILDE2>;
        };
        td26: tap_dance_26 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp H>, <&kp J>, <&kp LT>;
        };
    };
        macros {
        app_dn: app_lworkspace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHIFT &kp LGUI>
                , <&macro_tap &kp PG_DN>
                , <&macro_release &kp LSHIFT &kp LGUI>
                ;
                };
        app_up: app_rworkspace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHIFT &kp LGUI>
                , <&macro_tap &kp PG_UP>
                , <&macro_release &kp LSHIFT &kp LGUI>
                ;
                };
        wp_up: lworkspace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp PG_UP>
                , <&macro_release &kp LGUI>
                ;
                };
        wp_dn: rworkspace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp PG_DN>
                , <&macro_release &kp LGUI>
                ;
                };                        
        ws: win_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI &kp LSHIFT>
                , <&macro_release &kp LGUI &kp LSHIFT>
                ;
                }; 
        capp: clos_app {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT &kp F4>
                , <&macro_release &kp LALT &kp F4>
                ;
                }; 
        };
        
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// 0-----------------------------------------------------------------------------------------
//       |  Q  |  W  |  R  |  T  |   |  T  |  Y   |  U  |  I  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//                   | GUI | LWR |   | ENT | RSE  |
                        bindings = <
                   &td0  &td1  &td2         &kp ESC       &td4        &td5       &td6   &td7
        &kp LSHIFT &td9  &td10 &td11        &kp F2        &kp LBKT    &td14      &td15  &td16    &kp CAPS
        &kp LCTRL  &td19 &td20 &td21        &pd DEL       &td23       &td24      &td25  &td26    &kp RALT
                               &lt 1 LGUI   &kp LALT    &lt 2 COMMA &lt 1 DOT
                        >; 
                };

                nav_layer {
// 1-----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
              &wp_up     &kp UP     &wp_dn     &kp N1          &none    &none     &kp UP    &none  
   &ws        &kp LEFT   &kp DOWN   &kp RIGHT  &kp N2          &none    &kp LEFT  &kp DOWN  &kp RIGHT &none
   &none      &app_up    &capp      &app_dn    &kp N3          &none    &none     &none     &none     &none
                                    &trans     &trans          &none    &none
                        >;
                };
                nums_layer {
// 2---------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
                  &kp KP_N7   &kp KP_N8    &kp KP_N9    &td4              &kp KP_MULTIPLY &kp KP_N7   &kp KP_N8    &kp KP_N9   
   &kp KP_DOT     &kp KP_N4   &kp KP_N5    &kp KP_N6    &kp KP_SLASH      &kp KP_SLASH    &kp KP_N4   &kp KP_N5    &kp KP_N6   &kp KP_DOT
   &kp KP_EQUAL   &kp KP_N1   &kp KP_N2    &kp KP_N3    &td23             &kp KP_EQUAL    &kp KP_N1   &kp KP_N2    &kp KP_N3   &kp KP_EQUAL 
                                        &kp KP_N0    &kp LNLCK         &none           &kp KP_N0
                        >;
                };
                gaming_layer {
// 7---------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
                   &kp Q &kp W &kp R      &kp T       &kp Y       &kp U    &kp O &kp P
        &kp E      &kp A &kp S &kp D      &kp F       &kp G       &kp H    &kp I &kp J    &kp L
        &kp LSHIFT &kp Z &kp X &kp C      &kp V       &kp B       &kp N    &kp M &kp SEMI &kp K
                               &kp LALT   &kp SPACE   &kp KP_DOT  &kp KP_N0
                        >;
                };
                bt_layer {
// 8---------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
                   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2    &kp T       &kp Y       &kp U    &kp O &kp P
        &kp E      &bt BT_SEL 3 &bt BT_SEL 4 &kp D           &kp F       &kp G       &kp H    &kp I &kp J    &kp L
        &bt BT_CLR &kp Z        &kp X        &kp C           &kp V       &kp B       &kp N    &kp M &kp SEMI &kp K
                                &kp LALT     &kp SPACE       &kp KP_DOT  &kp KP_N0
                        >;
                };
 
        combos {
        compatible = "zmk,combos";
        combo_tab {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp TAB>;
        };
        combo_enter {
            timeout-ms = <50>;
            key-positions = <14 15 16>;
            bindings = <&kp RET>;
        };
        combo_lenter {
            timeout-ms = <50>;
            key-positions = <9 10 11>;
            bindings = <&kp RET>;
        };
        combo_bcspace {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp BSPC>;
        };
        combo_lbcspace {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp BSPC>;
        };
        combo_space {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp SPACE>;
        };
        combo_lspace {
            timeout-ms = <50>;
            key-positions = <9 10>;
            bindings = <&kp SPACE>;
        };
        combo_volup {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp K_VOL_UP>;
        };
        combo_voldown {
            timeout-ms = <50>;
            key-positions = <5 6>;
            bindings = <&kp K_VOL_DN>;
        };
        combo_play_pause {
            timeout-ms = <50>;
            key-positions = <5 6 7>;
            bindings = <&kp K_PP>;
        };
        combo_next {
            timeout-ms = <50>;
            key-positions = <5 7>;
            bindings = <&kp K_NEXT>;
        };
        combo_prev {
            timeout-ms = <50>;
            key-positions = <4 7>;
            bindings = <&kp K_PREV>;
        };
        combo_bright_up {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp C_BRI_UP>;
        };
        combo_bright_down {
            timeout-ms = <50>;
            key-positions = <1 3>;
            bindings = <&kp C_BRI_DN>;
        };
        combo_layer2 {
            timeout-ms = <50>;
            key-positions = <19 21>;
            bindings = <&tog 2>;
            layers = <0 2>;
        };
        combo_ss {
            timeout-ms = <50>;
            key-positions = <13 17>;
            bindings = <&kp PSCRN>;
        };
        combo_gmng {
            timeout-ms = <50>;
            key-positions = <28 31>;
            bindings = <&tog 3>;
            layers = <0 3>;
        };
        combo_btlayer {
            timeout-ms = <50>;
            key-positions = <29 30>;
            bindings = <&tog 4>;
            layers = <0 4>;
        };
    };
};
};

//        | SW0  | SW1  | SW2  | SW3  |   | SW4  | SW5  | SW6  | SW7  |
// | SW8  | SW9  | SW10 | SW11 | SW12 |   | SW13 | SW14 | SW15 | SW16 | SW17 |
// | SW18 | SW19 | SW20 | SW21 | SW22 |   | SW23 | SW24 | SW25 | SW26 | SW27 |
//                      | SW28 | SW29 |   | SW30 | SW31 |