#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        macros {
        alts_tab: alt_shift_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHIFT>
                , <&macro_tap &kp TAB>
                , <&macro_release &kp LSHIFT>
                ;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
//       |  Q  |  W  |  R  |  T  |   |  T  |  Y   |  U  |  I  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//                   | GUI | LWR |   | ENT | RSE  |
                        bindings = <
                   &kp Q &kp W &kp R    &kp T        &kp Y &kp U    &kp O &kp P
        &kp E      &kp A &kp S &kp D    &kp G        &kp H &kp I    &kp J &kp K    &kp L
        &kp LSHIFT &kp Z &kp X &kp C    &kp V        &kp B &kp N    &kp M &kp SEMI &kp F
                               &kp LGUI &mo 1        &kp RCTRL &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
              &kp TAB    &alts_tab  &kp N3   &kp N4           &kp N5    &kp N6   &kp UP    &kp N8   
   &kp LALT   &kp LSHIFT &kp LGUI   &trans   &trans           &kp FSLH  &kp LEFT &kp DOWN  &kp RIGHT &trans
   &kp N1     &kp N2     &kp N3     &kp N4   &kp N5           &kp N6    &kp N7   &kp N8    &kp N9    &kp N0   
                                    &kp LGUI &trans           &trans    &kp RALT
                        >;
                };
                other_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
              &kp HOME    &kp END  &kp PG_UP   &kp PG_DN           &kp N5    &kp KP_N7   &kp KP_N8    &kp KP_N9   
   &kp F1   &kp F2 &kp F3   &kp F4   &kp F5           &kp FSLH  &kp KP_N4   &kp KP_N5    &kp KP_N6   &trans
   &kp F6     &kp F7     &kp F8     &kp F9   &kp F10           &kp N6    &kp KP_N1   &kp KP_N2    &kp KP_N3   &kp N0   
                                    &kp LGUI &trans           &trans    &kp RALT
                        >;
                };

 
        combos {
        compatible = "zmk,combos";
        combo_tab {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp TAB>;
        };
        combo_enter {
            timeout-ms = <50>;
            key-positions = <14 15 16>;
            bindings = <&kp RET>;
        };
        combo_bcspace {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp BSPC>;
        };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 2>;
            bindings = <&kp ESC>;
        };
        combo_space {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp SPACE>;
        };
        combo_volup {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp K_VOL_UP>;
        };
        combo_voldown {
            timeout-ms = <50>;
            key-positions = <5 6>;
            bindings = <&kp K_VOL_DN>;
        };
        combo_play_pause {
            timeout-ms = <50>;
            key-positions = <5 6 7>;
            bindings = <&kp K_PP>;
        };
        combo_next {
            timeout-ms = <50>;
            key-positions = <5 7>;
            bindings = <&kp K_NEXT>;
        };
        combo_prev {
            timeout-ms = <50>;
            key-positions = <4 7>;
            bindings = <&kp K_PREV>;
        };
        combo_bright_up {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp C_BRI_UP>;
        };
        combo_bright_down {
            timeout-ms = <50>;
            key-positions = <1 3>;
            bindings = <&kp C_BRI_DN>;
        };
        combo_layer2 {
            timeout-ms = <50>;
            key-positions = <19 20 21>;
            bindings = <&tog 2>;
        };
    };
};
};
//        | SW0  | SW1  | SW2  | SW3  |   | SW4  | SW5  | SW6  | SW7  |
// | SW8  | SW9  | SW10 | SW11 | SW12 |   | SW13 | SW14 | SW15 | SW16 | SW17 |
// | SW18 | SW19 | SW20 | SW21 | SW22 |   | SW23 | SW24 | SW25 | SW26 | SW27 |
//                      | SW28 | SW29 |   | SW30 | SW31 |